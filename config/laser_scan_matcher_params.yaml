# ROS2 Laser Scan Matcher Parameters
laser_scan_matcher:
  ros__parameters:
    # General Parameters
    publish_odom: "odom" # If publish odometry from laser_scan. Empty if not, otherwise name of the topic
    publish_tf: true # If publish tf odom->base_link

    # Frame IDs
    base_frame: "base_link" # Which frame to use for the robot base
    odom_frame: "odom" # Which frame to use for the odom
    map_frame: "map" # Which frame to use for the map
    laser_frame: "laser" # Which frame to use for the laser

    # Keyframe Parameters
    kf_dist_linear: 0.10 # When to generate keyframe scan (m)
    kf_dist_angular: 0.1745 # When to generate keyframe scan (rad) - 10.0 * (PI/180.0)

    # CSM Algorithm Parameters
    max_angular_correction_deg: 45.0 # Maximum angular displacement between scans (deg)
    max_linear_correction: 0.5 # Maximum translation between scans (m)
    max_iterations: 10 # Maximum ICP cycle iterations
    epsilon_xy: 0.000001 # A threshold for stopping (m)
    epsilon_theta: 0.000001 # A threshold for stopping (rad)
    max_correspondence_dist: 0.3 # Maximum distance for a correspondence to be valid
    sigma: 0.010 # Noise in the scan (m)
    use_corr_tricks: 1 # Use smart tricks for finding correspondences
    restart: 0 # Restart if error is over threshold
    restart_threshold_mean_error: 0.01 # Threshold for restarting
    restart_dt: 1.0 # Displacement for restarting (m)
    restart_dtheta: 0.1 # Displacement for restarting (rad)
    clustering_threshold: 0.25 # Max distance for staying in the same clustering
    orientation_neighbourhood: 20 # Number of neighbour rays used to estimate the orientation
    use_point_to_line_distance: 1 # If 0, it's vanilla ICP
    do_alpha_test: 0 # Discard correspondences based on the angles
    do_alpha_test_thresholdDeg: 20.0 # Discard correspondences based on the angles - threshold angle, in degrees
    outliers_maxPerc: 0.9 # Percentage of correspondences to consider: if 0.9, always discard the top 10% of correspondences with more error

    # Adaptive outlier algorithm parameters
    outliers_adaptive_order: 0.7 # Order of the percentile for outlier filtering
    outliers_adaptive_mult: 2.0 # Multiplier for the percentile for outlier filtering

    # Advanced parameters
    do_visibility_test: 0 # Discard points that are not likely visible from the new position
    outliers_remove_doubles: 1 # No two points in laser_sens can have the same corr
    do_compute_covariance: 0 # If 1, computes the covariance of ICP
    debug_verify_tricks: 0 # Checks that find_correspondences_tricks gives the right answer
    use_ml_weights: 0 # Use maximum likelihood weights
    use_sigma_weights: 0 # Use sigma weights for point cloud matching